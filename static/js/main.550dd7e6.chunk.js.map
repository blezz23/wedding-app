{"version":3,"sources":["AppMenu/WeddingQuiz/WeddingQuiz.js","AppMenu/WeakestLink/Components/MoneyChain.js","AppMenu/WeakestLink/Components/QuestionWindow.js","AppMenu/WeakestLink/Components/Timer.js","AppMenu/WeakestLink/Components/MoneyBank.js","Redux/reducers/moneyChain-reducer.js","Redux/reducers/question-reducer.js","AppMenu/WeakestLink/WeakestLink.js","Redux/reducers/playersName-reducer.js","AppMenu/PlayersMenu/Player.js","AppMenu/PlayersMenu/SecondPlayersMenu.js","AppMenu/PlayersMenu/validate.js","AppMenu/PlayersMenu/PlayersMenuReduxForm.js","AppMenu/PlayersMenu/PlayersMenu.js","AppMenu/router.js","AppMenu/AppMenu.js","App.js","serviceWorker.js","Redux/redux-store.js","index.js","AppMenu/WeakestLink/Components/QuestionWindow.module.css","AppMenu/WeakestLink/WeakestLink.module.css","AppMenu/AppMenu.module.css","AppMenu/WeakestLink/Components/MoneyChain.module.css"],"names":["WeddingQuiz","props","className","styles","MoneyChain","moneyChainModule","chain","map","item","active","currentId","id","value","bankOfRound","QuestionWindow","questionWindow","question","currentRound","activeQuestion","player","playersName","playerNameNumber","name","Timer","forwardRef","ref","useState","seconds","setSeconds","isActive","setIsActive","useEffect","interval","setInterval","clearInterval","useImperativeHandle","stopTimer","totalSeconds","Math","floor","minutes","convertTime","onClick","setActiveQuestion","MoneyBank","moneyBank","initialState","moneyChainReducer","state","action","type","bankOfRoundSum","questionsRound1","questionsRound2","numberOfRound","questionsReducer","connect","questions","questionsModule","playersData","players","dispatch","addBankOfRound","addBankOfRoundAC","numberOfRoundChange","numberOfRoundChangeAC","setBankOfRound","localBank","setLocalBank","setCurrentId","setPlayerNameNumber","timerRef","useRef","nextQuestion","length","buttonPressed","event","key","current","navigate","document","addEventListener","console","log","removeEventListener","main","timer","bank","ADD_PLAYERS","playersNameReducer","names","filter","p","Player","SecondPlayersMenu","pl","validate","values","errors","playersArrayErrors","forEach","playerIndex","playerErrors","_error","renderField","input","label","meta","touched","error","placeholder","renderPlayers","fields","push","index","title","remove","Field","component","PlayersMenuReduxForm","reduxForm","form","handleSubmit","pristine","reset","submitting","onSubmit","FieldArray","disabled","addPlayers","addPlayersAC","deletePlayer","deletePlayerAC","Routes","quiz","idGame","weakestLink","AppMenu","appMenu","href","quizA","weakestLinkA","App","routeResult","useRoutes","Boolean","window","location","hostname","match","reducers","combineReducers","formReducer","store","createStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.550dd7e6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./WeddingQuiz.module.css\"\r\n\r\nconst WeddingQuiz = (props) => {\r\n    return (\r\n        <div className={styles}>\r\n            Квиз\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default WeddingQuiz;","import React from 'react';\r\nimport styles from './MoneyChain.module.css'\r\n\r\nconst MoneyChain = (props) => {\r\n    return (\r\n        <div className={styles}>\r\n            {props.moneyChainModule.chain.map(item => {\r\n                let active = styles.active;\r\n                if (props.currentId > item.id) {\r\n                   active = '';\r\n                }\r\n                return <div id={item.id} className={active}>{item.value}</div>\r\n            })}\r\n            <div id=\"bankRound\">{props.bankOfRound}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MoneyChain;","import React from 'react';\r\nimport styles from './QuestionWindow.module.css'\r\n\r\nconst QuestionWindow = (props) => {\r\n    return (\r\n        <div className={styles.questionWindow}>\r\n            <div className={styles.question}>\r\n                {props.currentRound[props.activeQuestion].question}\r\n            </div>\r\n            <div className={styles.player}>{props.playersName[props.playerNameNumber]?.name}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default QuestionWindow;","import styles from './Timer.module.css'\r\nimport React, {useState, useEffect, forwardRef, useImperativeHandle} from 'react';\r\n\r\nconst Timer = forwardRef((props, ref) => {\r\n    const [seconds, setSeconds] = useState(240000);\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    function convertTime(value) {\r\n        const totalSeconds = Math.floor(value/1000);\r\n        const minutes = Math.floor(totalSeconds/60);\r\n        const seconds = totalSeconds - minutes * 60;\r\n        if (seconds < 10) {\r\n            return minutes + ':0' + seconds;\r\n        } else\r\n            return minutes + ':' + seconds;\r\n    }\r\n\r\n    function toggle() {\r\n        setIsActive(!isActive);\r\n        if (!isActive && props.activeQuestion === 0)\r\n            props.setActiveQuestion(props.activeQuestion + 1);\r\n    }\r\n\r\n    function reset() {\r\n        setSeconds(240000);\r\n        setIsActive(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n\r\n        if (isActive && seconds !== 0) {\r\n            interval = setInterval(() => {\r\n                setSeconds(seconds => seconds - 1000);\r\n            }, 1000);\r\n        } else\r\n            clearInterval(interval);\r\n        return () => clearInterval(interval);\r\n    }, [isActive, seconds]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        stopTimer() {\r\n            setIsActive(!isActive)\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <div className={styles}>\r\n            <div>\r\n                {convertTime(seconds)}\r\n            </div>\r\n            <div>\r\n                <button onClick={toggle}>\r\n                    {isActive ? 'Pause' : 'Start'}\r\n                </button>\r\n                <button onClick={reset}>\r\n                    Reset\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Timer;","import React from 'react';\r\nimport styles from './QuestionWindow.module.css'\r\n\r\nconst MoneyBank = (props) => {\r\n    return (\r\n        <div className={styles}>\r\n            {props.moneyBank}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MoneyBank;","let ADD_BANK_OF_ROUND = \"moneyChain/ADD_BANK_OF_ROUND\";\r\n\r\nlet initialState = {\r\n    chain: [\r\n        {id: 0, value: 40000},\r\n        {id: 1, value: 30000},\r\n        {id: 2, value: 20000},\r\n        {id: 3, value: 15000},\r\n        {id: 4, value: 10000},\r\n        {id: 5, value: 5000},\r\n        {id: 6, value: 2000},\r\n        {id: 7, value: 1000}\r\n    ],\r\n    moneyBank: 0\r\n};\r\n\r\nconst moneyChainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_BANK_OF_ROUND:\r\n            return {\r\n                ...state,\r\n                moneyBank: action.bankOfRoundSum\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const addBankOfRoundAC = (bankOfRoundSum) => ({type: ADD_BANK_OF_ROUND, bankOfRoundSum});\r\n\r\nexport default moneyChainReducer;","let NUMBER_OF_ROUND_CHANGE = \"/questions/NUMBER_OF_ROUND_CHANGE\";\r\n\r\nlet initialState = {\r\n    questionsRound1: [\r\n        {id: 1, question: \"Приготовьтесь к первому раунду!\"},\r\n        {id: 2, question: \"text2\"},\r\n        {id: 3, question: \"text3\"},\r\n        {id: 4, question: \"text4\"},\r\n        {id: 5, question: \"text5\"},\r\n        {id: 6, question: \"text6\"}\r\n    ],\r\n    questionsRound2: [\r\n        {id: 1, question: \"Приготовьтесь ко второму раунду!\"},\r\n        {id: 2, question: \"text2\"},\r\n        {id: 3, question: \"text3\"},\r\n        {id: 4, question: \"text4\"},\r\n        {id: 5, question: \"text5\"},\r\n        {id: 6, question: \"text6\"}\r\n    ],\r\n    numberOfRound: 1\r\n};\r\n\r\nconst questionsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case NUMBER_OF_ROUND_CHANGE:\r\n            return {\r\n                ...state,\r\n                numberOfRound: action.numberOfRound\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const numberOfRoundChangeAC = (numberOfRound) => ({type: NUMBER_OF_ROUND_CHANGE, numberOfRound});\r\n\r\nexport default questionsReducer;","import React, {useEffect, useRef, useState} from \"react\";\r\nimport styles from \"./WeakestLink.module.css\"\r\nimport MoneyChain from \"./Components/MoneyChain\";\r\nimport QuestionWindow from \"./Components/QuestionWindow\";\r\nimport Timer from \"./Components/Timer\";\r\nimport MoneyBank from \"./Components/MoneyBank\";\r\nimport {addBankOfRoundAC} from \"../../Redux/reducers/moneyChain-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {navigate} from \"hookrouter\";\r\nimport {numberOfRoundChangeAC} from \"../../Redux/reducers/question-reducer\";\r\n\r\nconst WeakestLink = (props) => {\r\n    let [bankOfRound, setBankOfRound] = useState(0);\r\n    let [localBank, setLocalBank] = useState(0);\r\n    let [currentId, setCurrentId] = useState(7);\r\n    let [activeQuestion, setActiveQuestion] = useState(0);\r\n    let [playerNameNumber, setPlayerNameNumber] = useState(0);\r\n    let currentRound = props.questions[`questionsRound${props.numberOfRound}`];\r\n    let timerRef = useRef();\r\n\r\n    let nextQuestion = () => {\r\n        (playerNameNumber >= 7)\r\n            ? setPlayerNameNumber(0)\r\n            : setPlayerNameNumber(playerNameNumber + 1);\r\n        if (activeQuestion < currentRound.length - 1)\r\n            setActiveQuestion(activeQuestion + 1)\r\n    };\r\n\r\n    const buttonPressed = function (event) {\r\n        switch (event.key) {\r\n            case \"y\":\r\n            case \"Y\":\r\n            case \"Н\":\r\n            case \"н\":\r\n                if (currentId > 0) {\r\n                    setLocalBank(props.moneyChainModule.chain[currentId].value);\r\n                    setCurrentId(currentId - 1);\r\n                    nextQuestion()\r\n                } else {\r\n                    setBankOfRound(40000);\r\n                    timerRef.current.stopTimer()\r\n                }\r\n                break;\r\n            case \"n\":\r\n            case \"N\":\r\n            case \"Т\":\r\n            case \"т\":\r\n                setCurrentId(7);\r\n                setLocalBank(0);\r\n                nextQuestion();\r\n                break;\r\n            case \"Backspace\":\r\n                setCurrentId(7);\r\n                setBankOfRound(bankOfRound + localBank);\r\n                if (bankOfRound + localBank >= 40000) {\r\n                    setBankOfRound(40000);\r\n                    timerRef.current.stopTimer()\r\n                }\r\n                setLocalBank(0);\r\n                break;\r\n            case \"+\":\r\n                props.addBankOfRound(bankOfRound + props.moneyChainModule.moneyBank);\r\n                setBankOfRound(0);\r\n                setActiveQuestion(0);\r\n                props.numberOfRoundChange(props.numberOfRound + 1);\r\n                navigate(\"/menu/weakestLink\");\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', buttonPressed);\r\n\r\n        console.log('useEffect');\r\n        return () => {\r\n            document.removeEventListener('keydown', buttonPressed);\r\n        };\r\n    }, [buttonPressed]);\r\n\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.chain}>\r\n                <MoneyChain\r\n                    currentId={currentId}\r\n                    bankOfRound={bankOfRound}\r\n                    moneyChainModule={props.moneyChainModule}/>\r\n            </div>\r\n            <div className={styles.question}>\r\n                <QuestionWindow\r\n                    activeQuestion={activeQuestion}\r\n                    playersName={props.playersName}\r\n                    playerNameNumber={playerNameNumber}\r\n                    currentRound={currentRound}/>\r\n            </div>\r\n            <div className={styles.timer}>\r\n                <Timer\r\n                    ref={timerRef}\r\n                    setActiveQuestion={setActiveQuestion}\r\n                    activeQuestion={activeQuestion}/>\r\n            </div>\r\n            <div className={styles.bank}>\r\n                <MoneyBank moneyBank={props.moneyBank}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        moneyChainModule: state.moneyChainModule,\r\n        questions: state.questionsModule,\r\n        playersName: state.playersName.playersData.players,\r\n        moneyBank: state.moneyChainModule.moneyBank,\r\n        numberOfRound: state.questionsModule.numberOfRound\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addBankOfRound: (bankOfRoundSum) => {\r\n            dispatch(addBankOfRoundAC(bankOfRoundSum))\r\n        },\r\n        numberOfRoundChange: (numberOfRound) => {\r\n            dispatch(numberOfRoundChangeAC(numberOfRound))\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeakestLink);","let ADD_PLAYERS = 'playersName/ADD_PLAYERS';\r\nlet DELETE_PLAYER = 'playersName/DELETE_PLAYER';\r\n\r\nlet initialState = {\r\n    playersData: {\r\n        players: [\r\n            {name: 'Nikita'},\r\n            {name: 'Elena'},\r\n            {name: 'Mr.Nobody'},\r\n            {name: 'Hulk'},\r\n            {name: 'Nikita'},\r\n            {name: 'Elena'},\r\n            {name: 'Mr.Nobody'},\r\n            {name: 'Hulk'}\r\n        ]\r\n    }\r\n};\r\n\r\nconst playersNameReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_PLAYERS:\r\n            return {\r\n                ...state,\r\n                playersData: action.names\r\n            };\r\n        case DELETE_PLAYER:\r\n            return {\r\n                ...state,\r\n                players: state.players.filter(p => p.id !== action.id)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPlayersAC = (names) => ({type: ADD_PLAYERS, names});\r\nexport const deletePlayerAC = (id) => ({type: DELETE_PLAYER, id});\r\n\r\nexport default playersNameReducer;","import React from \"react\";\r\n\r\nconst Player = (props) => {\r\n    return (\r\n        <div>\r\n            {props.name}\r\n            <button>XXX</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Player;","import React from \"react\";\r\nimport Player from \"./Player\";\r\nimport {navigate} from \"hookrouter\";\r\n\r\nconst SecondPlayersMenu = (props) => {\r\n    let players = props.players.map(pl => <Player name={pl.name}/>);\r\n\r\n    let nextRound = () => {\r\n        navigate('/weakestLink')\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {players}\r\n            <button onClick={nextRound}>Продолжить игру</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SecondPlayersMenu;","const validate = values => {\r\n    const errors = {};\r\n    if (!values.players || !values.players.length) {\r\n        errors.players = { _error: 'At least one member must be entered' }\r\n    } else {\r\n        const playersArrayErrors = [];\r\n        values.players.forEach((player, playerIndex) => {\r\n            const playerErrors = {};\r\n            if (!player || !player.name) {\r\n                playerErrors.name = 'Ты не пройдёшь!';\r\n                playersArrayErrors[playerIndex] = playerErrors\r\n            }\r\n            return playerErrors\r\n        });\r\n        if(playersArrayErrors.length) {\r\n            errors.players = playersArrayErrors\r\n        }\r\n    }\r\n    return errors\r\n};\r\n\r\nexport default validate","import {Field, FieldArray, reduxForm} from \"redux-form\";\r\nimport validate from \"./validate\";\r\nimport React from \"react\";\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n    <div>\r\n        <div>\r\n            <input {...input} type={type} placeholder={label}/>\r\n            {touched && error && <span>{error}</span>}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst renderPlayers = ({ fields }) => (\r\n    <ul>\r\n        <li>\r\n            <button type=\"button\" onClick={() => fields.push({})}>Добавить игрока</button>\r\n        </li>\r\n        {fields.map((player, index) =>\r\n            <li key={index}>\r\n                <button\r\n                    type=\"button\"\r\n                    title=\"Remove player\"\r\n                    onClick={() => fields.remove(index)}/>\r\n                <h4>Игрок #{index + 1}</h4>\r\n                <Field\r\n                    name={`${player}.name`}\r\n                    type=\"text\"\r\n                    component={renderField}\r\n                    label={`Игрок ${index + 1}`} />\r\n            </li>\r\n        )}\r\n    </ul>\r\n);\r\n\r\nconst FieldArraysForm = (props) => {\r\n    const { handleSubmit, pristine, reset, submitting } = props;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <FieldArray name=\"players\" component={renderPlayers}/>\r\n            <div>\r\n                <button type=\"submit\" disabled={submitting}>\r\n                    {(props.numberOfRound <= 1) ? 'Начать игру' : 'Продолжить игру'}\r\n                </button>\r\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\r\n                    Очистить ввод\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport const PlayersMenuReduxForm = reduxForm({form: 'fieldArrays', validate})(FieldArraysForm);","import React from \"react\";\r\nimport {navigate} from \"hookrouter\";\r\nimport {addPlayersAC, deletePlayerAC} from \"../../Redux/reducers/playersName-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport SecondPlayersMenu from \"./SecondPlayersMenu\";\r\nimport {PlayersMenuReduxForm} from \"./PlayersMenuReduxForm\";\r\n\r\nconst PlayersMenu = (props) => {\r\n    const onSubmit = (values) => {\r\n        props.addPlayers(values);\r\n        navigate('/weakestLink')\r\n    };\r\n\r\n    if (props.numberOfRound > 1) {\r\n        return <SecondPlayersMenu players={props.playersName}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PlayersMenuReduxForm\r\n                onSubmit={onSubmit}\r\n                numberOfRound={props.numberOfRound} />\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        numberOfRound: state.questionsModule.numberOfRound,\r\n        playersName: state.playersName.playersData.players\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPlayers: (names) => {\r\n            dispatch(addPlayersAC(names));\r\n        },\r\n        deletePlayer: (id) => {\r\n            dispatch(deletePlayerAC(id))\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayersMenu);","import React from \"react\";\r\nimport WeddingQuiz from \"./WeddingQuiz/WeddingQuiz\";\r\nimport WeakestLink from \"./WeakestLink/WeakestLink\";\r\nimport PlayersMenu from \"./PlayersMenu/PlayersMenu\";\r\n\r\nconst Routes = {\r\n    \"/menu/:quiz\": ({quiz}) => <PlayersMenu idGame={quiz}/>,\r\n    \"/menu/:weakestLink\": ({weakestLink}) => <PlayersMenu idGame={weakestLink}/>,\r\n    \"/quiz\": () => <WeddingQuiz/>,\r\n    \"/weakestLink\": () => <WeakestLink/>\r\n};\r\n\r\nexport default Routes;","import {A} from \"hookrouter\";\r\nimport React from \"react\";\r\nimport styles from \"./AppMenu.module.css\"\r\n\r\nconst AppMenu = (props) => {\r\n    return (\r\n        <div className={styles.appMenu}>\r\n            <div className={styles.quiz}>\r\n                <A href=\"/menu/quiz\" className={styles.quizA}>\r\n                    Квиз\r\n                </A>\r\n            </div>\r\n            <div className={styles.weakestLink}>\r\n                <A href=\"/menu/weakestLink\" className={styles.weakestLinkA}>\r\n                    Слабое звено\r\n                </A>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppMenu;","import React from \"react\";\nimport \"./App.css\";\nimport {useRoutes} from \"hookrouter\";\nimport Routes from \"./AppMenu/router\";\nimport AppMenu from \"./AppMenu/AppMenu\";\n\nconst App = () => {\n    const routeResult = useRoutes(Routes);\n    return (\n        <div className=\"App\">\n            <AppMenu/>\n            {routeResult}\n        </div>\n    )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers, createStore} from \"redux\";\r\nimport questionsReducer from \"./reducers/question-reducer\";\r\nimport moneyChainReducer from \"./reducers/moneyChain-reducer\";\r\nimport playersNameReducer from \"./reducers/playersName-reducer\";\r\nimport {reducer as formReducer } from \"redux-form\";\r\n\r\nlet reducers = combineReducers({\r\n    questionsModule: questionsReducer,\r\n    moneyChainModule: moneyChainReducer,\r\n    playersName: playersNameReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/redux-store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionWindow\":\"QuestionWindow_questionWindow__13nlF\",\"question\":\"QuestionWindow_question__2D0CU\",\"player\":\"QuestionWindow_player__ckV0v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"WeakestLink_main__qgl1r\",\"chain\":\"WeakestLink_chain__PWQhr\",\"question\":\"WeakestLink_question__29rWc\",\"timer\":\"WeakestLink_timer__14mAE\",\"bank\":\"WeakestLink_bank__goQpO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appMenu\":\"AppMenu_appMenu___GXpL\",\"quiz\":\"AppMenu_quiz__y1N06\",\"quizA\":\"AppMenu_quizA__2pR2m\",\"weakestLink\":\"AppMenu_weakestLink__2MKVd\",\"weakestLinkA\":\"AppMenu_weakestLinkA__3UO6u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"MoneyChain_active__1R-Cd\"};"],"sourceRoot":""}